version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    networks:
      - scanner-net

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "scan-requested:1:2"
    networks:
      - scanner-net

  scanner-db:
    image: postgres:latest
    restart: always
    container_name: scanner-db
    env_file:
      - .env
    ports:
      - '5432:5432'
    volumes:
      - ./sql:/sql
      - scanner-volume:/var/lib/postgresql/data/
    networks:
      - scanner-net

  scan-migrate:
    image: scan-migrate:latest
    container_name: scan-migrate
    build:
      context: .
      dockerfile: infrastructure/Migrate.Dockerfile
    env_file:
      - .env
    command: ["/src/migrate.sh"]
    networks:
      - scanner-net
    depends_on:
      - scanner-db

  scan-service:
    image: scan-service:latest
    container_name: scan-service
    build:
      context: .
      dockerfile: infrastructure/Dockerfile
    ports:
      - "8080:8080"
    env_file:
      - .env
    networks:
      - scanner-net
    depends_on:
      - scan-migrate
      - kafka
      - zookeeper

networks:
  scanner-net:
    driver: bridge

volumes:
  scanner-volume: